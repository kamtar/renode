name: Sync Fork with Upstream

on:
  schedule:
    # Run daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  sync-fork:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/renode/renode.git || true
          git fetch upstream
      
      - name: Sync with upstream using ours strategy
        run: |
          # Get current branch name
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $CURRENT_BRANCH"
          
          # Merge upstream/master into current branch with ours strategy for conflicts
          git merge upstream/master -X ours -m "Sync with upstream (conflicts resolved with ours strategy)" || {
            echo "Merge had conflicts, resolving with ours strategy"
            git checkout --ours .
            git add -A
            git commit -m "Sync with upstream (conflicts resolved with ours strategy)"
          }
      
      - name: Trigger renode-infrastructure sync
        run: |
          # Trigger the sync workflow in kamtar/renode-infrastructure
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/kamtar/renode-infrastructure/actions/workflows/sync-fork.yml/dispatches \
            -d '{"ref":"master"}'
          
          # Wait for the workflow to complete (wait 2 minutes)
          echo "Waiting for renode-infrastructure sync to complete..."
          sleep 120
      
      - name: Update renode-infrastructure submodule
        run: |
          cd src/Infrastructure
          
          # Fetch latest changes from kamtar/renode-infrastructure
          git fetch origin
          
          # Get the latest commit from master branch
          git checkout origin/master
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "Latest commit in renode-infrastructure: $LATEST_COMMIT"
          
          cd ../..
          
          # Update the submodule reference
          git add src/Infrastructure
          
          # Check if there are changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "Update renode-infrastructure submodule to latest commit"
          else
            echo "No submodule update needed"
          fi
      
      - name: Push changes
        run: |
          git push origin HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
